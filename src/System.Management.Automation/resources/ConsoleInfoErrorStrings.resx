<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="MonadConsoleNotFound" xml:space="preserve">
    <value>Required element "PSConsoleFile" in {0} is missing or incorrect.</value>
  </data>
  <data name="MonadVersionNotFound" xml:space="preserve">
    <value>Required element "PSVersion" in {0} is missing or incorrect.</value>
  </data>
  <data name="BadConsoleVersion" xml:space="preserve">
    <value>Required element "ConsoleSchemaVersion" in {0} is missing or incorrect.</value>
  </data>
  <data name="BadXMLFormat" xml:space="preserve">
    <value>The console file is not valid. Multiple entries were found for the element PSConsoleFile. Only one entry is supported for this version.</value>
  </data>
  <data name="PSSnapInNotFound" xml:space="preserve">
    <value>The console file is not valid because the element {0} is not valid.</value>
  </data>
  <data name="IDNotFound" xml:space="preserve">
    <value>The console file is not valid because the Windows PowerShell snap-in name is missing.</value>
  </data>
  <data name="SaveDefaultError" xml:space="preserve">
    <value>Attempting to save a console file with no name. Use Export-Console with the Path parameter to save the console file.</value>
  </data>
  <data name="BadXMLElementFound" xml:space="preserve">
    <value>Unknown element {0} found. "{1}" should have "{2}" and "{3}" elements only.</value>
  </data>
  <data name="MultipleMshSnapinsElementNotSupported" xml:space="preserve">
    <value>The console file is not valid. Only one occurrence of the element "{0}" is allowed.</value>
  </data>
  <data name="PathNotAbsolute" xml:space="preserve">
    <value>The path {0} is not an absolute path.</value>
  </data>
  <data name="BadConsoleExtension" xml:space="preserve">
    <value>The console file name extension is not valid. A console file name extension must be psc1.</value>
  </data>
  <data name="BadMonadVersion" xml:space="preserve">
    <value>Incorrect Windows PowerShell version {0}. Windows PowerShell version {1} is supported on this computer.</value>
  </data>
  <data name="PSSnapInDoesNotExist" xml:space="preserve">
    <value>Cannot find any Windows PowerShell snap-in information for {0}.</value>
  </data>
  <data name="CannotLoadDefault" xml:space="preserve">
    <value>This is a system Windows PowerShell snap-in that is loaded by Windows PowerShell.</value>
  </data>
  <data name="PSSnapInAlreadyExists" xml:space="preserve">
    <value>Cannot add Windows PowerShell snap-in {0} because it is already added. Verify the name of the snap-in, and then try again.</value>
  </data>
  <data name="CannotRemovePSSnapIn" xml:space="preserve">
    <value>Cannot remove the Windows PowerShell snap-in {0} because it is not loaded. Verify the name of the snap-in that you want to remove, and then try again.</value>
  </data>
  <data name="CannotRemoveDefault" xml:space="preserve">
    <value>Cannot remove the Windows PowerShell snap-in {0} because it is a system snap-in. Verify the name of the snap-in that you want to remove, and then try again.</value>
  </data>
  <data name="PSSnapInReadError" xml:space="preserve">
    <value>Cannot load the Windows PowerShell snap-in because an error occurred while reading the registry information for the snap-in.</value>
  </data>
  <data name="CannotLoadDefaults" xml:space="preserve">
    <value>An error occurred while attempting to load the system Windows PowerShell snap-ins. Please contact Microsoft Customer Support Services.</value>
  </data>
  <data name="ConsoleLoadFailure" xml:space="preserve">
    <value>The following errors occurred when loading console {0}: {1}</value>
  </data>
  <data name="PSSnapInLoadFailure" xml:space="preserve">
    <value>Cannot load Windows PowerShell snap-in {0} because of the following error: {1}</value>
  </data>
  <data name="PSSnapInLoadWarning" xml:space="preserve">
    <value>Windows PowerShell snap-in "{0}" loaded with the following warnings: {1}</value>
  </data>
  <data name="PSSnapInAssemblyNameMismatch" xml:space="preserve">
    <value>The Windows PowerShell snap-in module {0} does not have the required Windows PowerShell snap-in strong name {1}.</value>
  </data>
  <data name="PSSnapInDuplicateCmdlets" xml:space="preserve">
    <value>The cmdlet '{0}' should not occur more than once in Windows PowerShell snap-in '{1}'.</value>
  </data>
  <data name="PSSnapInDuplicateProviders" xml:space="preserve">
    <value>Windows PowerShell provider '{0}' should not occur more than once in Windows PowerShell snap-in '{1}'.</value>
  </data>
  <data name="AddPSSnapInBadMonadVersion" xml:space="preserve">
    <value>Windows PowerShell {0} is not supported in the current console. Windows PowerShell {1} is supported in the current console.</value>
  </data>
  <data name="CmdletNotAvailable" xml:space="preserve">
    <value>The cmdlet is not supported by the custom shell.</value>
  </data>
  <data name="ConsoleFileReadOnly" xml:space="preserve">
    <value>Cannot export to this file because file {0} is read-only. Change the read-only attribute of the file to read-write, or export to a different file.</value>
  </data>
  <data name="FileExistsNoClobber" xml:space="preserve">
    <value>File {0} already exists and {1} was specified.</value>
  </data>
  <data name="ConsoleFileNameNotResolved" xml:space="preserve">
    <value>Cannot export to a console because no console is loaded or no name is specified.</value>
  </data>
  <data name="FileNameCaptionForExportConsole" xml:space="preserve">
    <value>Cmdlet {0}</value>
  </data>
  <data name="FileNamePromptMessage" xml:space="preserve">
    <value>Supply values for the following parameters:</value>
  </data>
  <data name="PromptForExportConsole" xml:space="preserve">
    <value>Cannot export a console file because no console file has been specified. Do you want to continue with the export operation?</value>
  </data>
  <data name="ConsoleCannotbeConvertedToString" xml:space="preserve">
    <value>Cannot save the file because the file name format is not valid. Specify a file name using the command: export-console -path.</value>
  </data>
  <data name="FileNameNotResolved" xml:space="preserve">
    <value>Cannot save the specified file. The Save operation was canceled.</value>
  </data>
  <data name="ConsoleFileWildCardsNotSupported" xml:space="preserve">
    <value>Cannot save the console file because wildcard characters were used. Specify a console file without wildcard characters.</value>
  </data>
  <data name="ProviderNotSupported" xml:space="preserve">
    <value>You can only save a file when you are working in a file provider. The current provider '{0}' is not a file provider.</value>
  </data>
  <data name="ConsoleVariableCannotBeSet" xml:space="preserve">
    <value>Cannot set the ConsoleFileName variable to {0}. File {0} was saved.</value>
  </data>
  <data name="ExportConsoleCannotDeleteFile" xml:space="preserve">
    <value>The Save operation failed. Cannot remove the file {0}.</value>
  </data>
</root>