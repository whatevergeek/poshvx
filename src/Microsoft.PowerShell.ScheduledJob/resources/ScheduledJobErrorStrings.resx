<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CannotFindJobDefinition" xml:space="preserve">
    <value>Cannot find scheduled job {0}.</value>
    <comment>{0} is the scheduled job defintion name that cannot be found.</comment>
  </data>
  <data name="CannotFindTaskId" xml:space="preserve">
    <value>Cannot find scheduled job definition {0} in the Task Scheduler.</value>
  </data>
  <data name="CannotRemoveTaskRunningInstance" xml:space="preserve">
    <value>The scheduled job definition {0} cannot be removed because one or more instances are currently running.  You can remove and stop all running instances by using the Force parameter.</value>
  </data>
  <data name="CantAddJobTriggersToDefinition" xml:space="preserve">
    <value>An error occurred while adding triggers to the scheduled job {0}.</value>
  </data>
  <data name="CantFindInWTS" xml:space="preserve">
    <value>There is no entry in Task Scheduler for scheduled job definition {0}.  A new Task Scheduler entry has been created for this scheduled job definition.</value>
  </data>
  <data name="CantLoadDefinitionFromStore" xml:space="preserve">
    <value>Cannot get the {0} scheduled job because it is corrupted or in an irresolvable state. Because it cannot run, Windows PowerShell has deleted {0} and its results from the computer. To recreate the scheduled job, use the Register-ScheduledJob cmdlet. For more information about corrupted scheduled jobs, see about_Scheduled_Jobs_Troubleshooting.</value>
    <comment>{0} is the name of the scheduled job definition.</comment>
  </data>
  <data name="CantLoadJobRunFromStore" xml:space="preserve">
    <value>An error occurred while loading job run results for scheduled job {0} with job run date {1}.  </value>
  </data>
  <data name="CantRegisterJobDefinition" xml:space="preserve">
    <value>An error occurred while registering the scheduled job {0}.</value>
  </data>
  <data name="CantRemoveTriggersFromDefinition" xml:space="preserve">
    <value>An error occurred while removing job triggers from scheduled job {0}.</value>
  </data>
  <data name="CantRetrieveJobRuns" xml:space="preserve">
    <value>One or more scheduled job runs could not be retrieved {0}.</value>
  </data>
  <data name="CantSaveJobNoFilePathSpecified" xml:space="preserve">
    <value>Job {0} cannot be saved because no file path was specified.</value>
  </data>
  <data name="CantSaveJobNotRun" xml:space="preserve">
    <value>Job {0} has not been run and cannot be saved.  Run the job first, and then save results.</value>
  </data>
  <data name="CantSetEnableOnJobDefinition" xml:space="preserve">
    <value>An error occurred while enabling or disabling the scheduled job {0}.</value>
  </data>
  <data name="CantSetJobDefinition" xml:space="preserve">
    <value>An error occurred while setting properties on the scheduled job {0}.</value>
  </data>
  <data name="CantStartJobDefinition" xml:space="preserve">
    <value>Cannot start a job from the {0} scheduled job definition.</value>
  </data>
  <data name="CantUnregisterDefinition" xml:space="preserve">
    <value>An error occurred while unregistering the scheduled job {0}.</value>
  </data>
  <data name="CantUpdateTriggerOnJobDef" xml:space="preserve">
    <value>An error occurred while updating the scheduled job definition {0} with this trigger {1}. See exception details for more information.</value>
  </data>
  <data name="ConflictingTypeParams" xml:space="preserve">
    <value>Only one JobTrigger type can be specified: AtStartup, AtLogon, Once, Daily, or Weekly.</value>
  </data>
  <data name="DefinitionAlreadyExistsInLocal" xml:space="preserve">
    <value>A scheduled job defintion object {0} already exists in the local scheduled job repository having this Global ID {1}.</value>
  </data>
  <data name="DefinitionNotFoundByGlobalId" xml:space="preserve">
    <value>A scheduled job definition object with Global ID {0} could not be found.</value>
  </data>
  <data name="DefinitionNotFoundById" xml:space="preserve">
    <value>A scheduled job definition with ID {0} could not be found.</value>
  </data>
  <data name="DefinitionNotFoundByName" xml:space="preserve">
    <value>A scheduled job definition with Name {0} could not be found.</value>
  </data>
  <data name="DefinitionObjectDisposed" xml:space="preserve">
    <value>This scheduled job definition object {0} has been disposed.</value>
  </data>
  <data name="DefinitionWhatIf" xml:space="preserve">
    <value>Scheduled job definition {0}.</value>
  </data>
  <data name="DirectoryNotFoundError" xml:space="preserve">
    <value>A directory not found error occurred while registering scheduled job definition {0}.  Make sure you are running Windows PowerShell with elevated privileges.</value>
  </data>
  <data name="ErrorRegisteringDefinitionStore" xml:space="preserve">
    <value>An error occurred while registering scheduled job definition {0}. Cannot add this definition object to the job store.</value>
  </data>
  <data name="ErrorRegisteringDefinitionTask" xml:space="preserve">
    <value>An error occurred while registering scheduled job definition {0} to the Windows Task Scheduler.  The Task Scheduler error is: {1}.</value>
  </data>
  <data name="ErrorRemovingDefinitionStore" xml:space="preserve">
    <value>An error occurred while unregistering scheduled job definition {0}.</value>
  </data>
  <data name="ErrorSettingAccessPermissions" xml:space="preserve">
    <value>An error occurred while setting file access permissions for job definition {0} and user {1}.</value>
  </data>
  <data name="ErrorUpdatingDefinitionStore" xml:space="preserve">
    <value>An error occurred while updating scheduled job definition {0}.  Cannot update this definition in the job store.</value>
  </data>
  <data name="ErrorUpdatingDefinitionTask" xml:space="preserve">
    <value>An error occurred while updating scheduled job definition {0}.  Cannot update this definition with the Windows Task Scheduler.</value>
  </data>
  <data name="GeneralWTSError" xml:space="preserve">
    <value>An error has occurred within the Task Scheduler.</value>
  </data>
  <data name="InvalidAtTime" xml:space="preserve">
    <value>The At parameter is not valid for the {0} job trigger type.</value>
  </data>
  <data name="InvalidDaysInterval" xml:space="preserve">
    <value>The DaysInterval parameter is not valid for the {0} job trigger type.</value>
  </data>
  <data name="InvalidDaysIntervalParam" xml:space="preserve">
    <value>The DaysInterval parameter value must be greater than zero.</value>
  </data>
  <data name="InvalidDaysOfWeek" xml:space="preserve">
    <value>The DaysOfWeek parameter is not valid for the {0} job trigger type.</value>
  </data>
  <data name="InvalidFilePath" xml:space="preserve">
    <value>The FilePath parameter is not valid.</value>
  </data>
  <data name="InvalidFilePathFile" xml:space="preserve">
    <value>Only Windows PowerShell script files are allowed for FilePath parameter. Specify a file with .ps1 extension.</value>
  </data>
  <data name="InvalidIdleDuration" xml:space="preserve">
    <value>The IdleDuration parameter cannot have a negative value.</value>
  </data>
  <data name="InvalidIdleTimeout" xml:space="preserve">
    <value>The IdleTimeout parameter cannot have a negative value.</value>
  </data>
  <data name="InvalidJobDefName" xml:space="preserve">
    <value>The scheduled job definition name {0} contains characters that are not valid.</value>
  </data>
  <data name="InvalidMaxResultCount" xml:space="preserve">
    <value>The MaxResultCount parameter cannot have a negative or zero value.</value>
  </data>
  <data name="InvalidUser" xml:space="preserve">
    <value>The User parameter is not valid for the {0} job trigger type.</value>
  </data>
  <data name="InvalidWeeksInterval" xml:space="preserve">
    <value>The WeeksInterval parameter is not valid for the {0} job trigger type.</value>
  </data>
  <data name="InvalidWeeksIntervalParam" xml:space="preserve">
    <value>The WeeksInterval parameter value must be greater than zero.</value>
  </data>
  <data name="IOFailureOnSetJobDefinition" xml:space="preserve">
    <value>An I/O failure occurred while updating the scheduled job definition {0}.  This could mean a file is missing or corrupted, either in Task Scheduler or in the Windows PowerShell scheduled job store. You might need to create the scheduled job definition again.</value>
    <comment>{0} is the scheduled job definition name</comment>
  </data>
  <data name="JobAlreadyRunning" xml:space="preserve">
    <value>Job {0} is currently running.</value>
  </data>
  <data name="JobDefFileAlreadyExists" xml:space="preserve">
    <value>The scheduled job definition {0} already exists in the job definition store.</value>
  </data>
  <data name="JobRunResultsFileAlreadyExists" xml:space="preserve">
    <value>The scheduled job results {0} already exist in the job results store.</value>
  </data>
  <data name="MissingAtTime" xml:space="preserve">
    <value>The At parameter is required for the {0} job trigger type.</value>
  </data>
  <data name="MissingDaysOfWeek" xml:space="preserve">
    <value>The DaysOfWeek parameter is required for the {0} job trigger type.</value>
  </data>
  <data name="MissingJobTriggerDaysOfWeek" xml:space="preserve">
    <value>The job trigger {0} requires the DaysOfWeek parameter to be defined.</value>
  </data>
  <data name="MissingJobTriggerTime" xml:space="preserve">
    <value>The Job trigger {0} requires the At parameter to be defined.</value>
  </data>
  <data name="MissingJobTriggerType" xml:space="preserve">
    <value>No Frequency type has been specified for this job trigger. One of the following job trigger frequencies must be specified: AtStartup, AtLogon, Once, Daily, Weekly.</value>
  </data>
  <data name="NoAccessOnSetJobDefinition" xml:space="preserve">
    <value>An access denied error occurred while updating the scheduled job definition {0}.  Try running Windows PowerShell with elevated user rights; that is, Run as Administrator.</value>
    <comment>{0} is the scheduled job definition name</comment>
  </data>
  <data name="NoAssociatedJobDefinitionForOption" xml:space="preserve">
    <value>There is no scheduled job definition object associated with this options object.</value>
  </data>
  <data name="NoAssociatedJobDefinitionForTrigger" xml:space="preserve">
    <value>There is no scheduled job definition object associated with this trigger {0}.</value>
  </data>
  <data name="ScheduledJobAlreadyExistsInLocal" xml:space="preserve">
    <value>The scheduled job {0} already exists in the local repository.</value>
  </data>
  <data name="ScheduledJobNotInRepository" xml:space="preserve">
    <value>The scheduled job {0} is not in the local job repository.</value>
  </data>
  <data name="TaskIdAlreadyExists" xml:space="preserve">
    <value>The scheduled job definition {0} already exists in Task Scheduler.</value>
  </data>
  <data name="TriggerDailyType" xml:space="preserve">
    <value>Daily</value>
  </data>
  <data name="TriggerLogonType" xml:space="preserve">
    <value>AtLogon</value>
  </data>
  <data name="TriggerNotFound" xml:space="preserve">
    <value>A scheduled job trigger with ID {0} was not found for the scheduled job definition {1}.</value>
  </data>
  <data name="TriggerOnceType" xml:space="preserve">
    <value>Once</value>
  </data>
  <data name="TriggerStartUpType" xml:space="preserve">
    <value>AtStartup</value>
  </data>
  <data name="TriggerWeeklyType" xml:space="preserve">
    <value>Weekly</value>
  </data>
  <data name="UnauthorizedAccessError" xml:space="preserve">
    <value>An access denied error occurred when registering scheduled job definition {0}.  Try running Windows PowerShell with elevated user rights; that is, Run As Administrator.</value>
  </data>
  <data name="UnknownTriggerFrequency" xml:space="preserve">
    <value>Cannot convert a ScheduledJobTrigger object with TriggerFrequency value of {0}.</value>
  </data>
  <data name="UnknownTriggerType" xml:space="preserve">
    <value>An unknown trigger type was returned from Task Scheduler for scheduled job definition {0} with trigger ID {1}.</value>
  </data>
  <data name="CannotSerializeData" xml:space="preserve">
    <value>The scheduled job definition {0} could not be saved because one of the values in the ArgumentList parameter cannot be converted to XML. If possible, change the ArgumentList values to types that are easily converted to XML, such as strings, integers, and hash tables. {1}</value>
    <comment>{0} is the name of the scheduled job definition that cannot be registered
{1} is the inner exception message from .Net serialization, or emtpy if no exception message.</comment>
  </data>
  <data name="UnsupportedHostFunction" xml:space="preserve">
    <value>Commands that interact with the host program, such as Write-Host, cannot be included in Windows PowerShell scheduled jobs because scheduled jobs do not interact with the host program.  Use an alternate command that does not interact with the host program, such as Write-Output or Out-File.</value>
  </data>
  <data name="InvalidRepetitionInterval" xml:space="preserve">
    <value>The RepetitionInterval parameter value must be less than or equal to the RepetitionDuration parameter value.</value>
  </data>
  <data name="InvalidRepetitionIntervalValue" xml:space="preserve">
    <value>The RepetitionInterval parameter value must be greater than 1 minute.</value>
  </data>
  <data name="InvalidRepetitionParams" xml:space="preserve">
    <value>The RepetitionInterval and RepetitionDuration Job trigger parameters must be specified together.</value>
  </data>
  <data name="InvalidRepetitionParamValues" xml:space="preserve">
    <value>The Repetition parameters cannot have negative values.</value>
  </data>
  <data name="InvalidSetTriggerRepetition" xml:space="preserve">
    <value>The Repetition parameters are not valid for the {0} job trigger type.</value>
  </data>
  <data name="MismatchedRepetitionParamValues" xml:space="preserve">
    <value>The RepetitionInterval parameter cannot have a value of zero unless the RepetitionDuration parameter also has a zero value. A zero value removes repetition behavior from the Job trigger.</value>
  </data>
  <data name="ErrorRenamingScheduledJob" xml:space="preserve">
    <value>An error occured while attempting to rename scheduled job from {0} to {1}.</value>
  </data>
  <data name="ErrorRenamingScheduledJobWithMessage" xml:space="preserve">
    <value>An error occured while attempting to rename scheduled job from {0} to {1} with error message: {2}.</value>
  </data>
  <data name="BrokenRenamingScheduledJob" xml:space="preserve">
    <value>An unrecoverable error occurred while renaming the scheduled job from {0} to {1}. The scheduled job will be removed.</value>
  </data>
  <data name="BrokenRenamingScheduledJobWithMessage" xml:space="preserve">
    <value>An unrecoverable error occurred while renaming the scheduled job from {0} to {1} with message {2}. The scheduled job will be removed.</value>
  </data>
  <data name="ErrorRunningAsTask" xml:space="preserve">
    <value>An error occurred while running scheduled job defintion {0} from the Task Scheduler.</value>
  </data>
  <data name="ErrorRunningAsTaskWithReason" xml:space="preserve">
    <value>An error occurred while running scheduled job defintion {0} from the Task Scheduler because {1}.</value>
  </data>
  <data name="InvalidRepeatIndefinitelyParams" xml:space="preserve">
    <value>You cannot specify the RepetitionDuration and RepeatIndefinitely parameters in the same command.</value>
  </data>
  <data name="InvalidRepetitionRepeatParams" xml:space="preserve">
    <value>When you use the RepeatIndefinitely parameter, the RepetitionInterval parameter is required.</value>
  </data>
  <data name="reasonJobNotFound" xml:space="preserve">
    <value>the scheduled job definition could not be found</value>
  </data>
  <data name="ReasonTaskDisabled" xml:space="preserve">
    <value>the scheduled job definition is disabled</value>
  </data>
</root>